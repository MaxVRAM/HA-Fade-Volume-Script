fade_volume:
  alias: Fade the volume of a media player
  mode: restart
  # User-defined inputs to use.
  fields:
    target_player:
      name: Target media player
      description: "Target media player of volume fade."
      required: true
      example: media_player.lounge_sonos
      selector:
        entity:
          domain: media_player
    target_volume:
      name: Target volume
      description: "Volume the media play will be at the end of the fade duration."
      required: true
      default: 0.5
      example: '0.5'
      selector:
        number:
          max: 1.0
          min: 0.0
          step: 0.01
          mode: slider
    duration:
      name: Fade duration
      description: "Length of time in seconds the fade should take."
      required: true
      default: 5
      example: '5'
      selector:
        number:
          mode: box
          unit_of_measurement: "s"
    curve:
      name: Fade curve algorithm
      description: "Shape of the fade curve to apply."
      required: true
      default: 'logarithmic'
      example: 'logarithmic'
      selector:
        select:
          options:
            - logarithmic
            - bezier
            - linear
  variables:
    # Hard-coded temporal granularlity.
    steps_per_second: 10
    # An integer denoting the total steps required to fade based on the user-defined duration and steps per second.
    total_steps: "{{ (steps_per_second * duration) | int(0) }}"
    # Define the difference between start point and target, used to scale each fade step.
    start_volume: "{{ state_attr(target_player, 'volume_level') | float(0) }}"
    start_diff: "{{ (target_volume - start_volume) | float(0) }}"
  sequence:
    - repeat:
        # Only continue if the following conditions are true:
        while:
            # Pre-calculated total step index has not been reached.
          - condition: template
            value_template: "{{ repeat.index < total_steps }}"
            # Media player's current volume is not close to the target, otherwise we're just wasting processing time.
          - condition: template
            value_template: "{{ ((state_attr(target_player, 'volume_level') - target_volume) | abs) > 0.001 }}"
        sequence:
          - service: media_player.volume_set
            data_template:
              entity_id: '{{ target_player }}'
              # Defines x as the normalised time over the duration based on the repeat index.
              # Then applies the fade curve on each step, multiplied by the difference factor.
              volume_level: >
                {% set t = repeat.index / total_steps %}
                {% if curve == 'logarithmic' %}
                  {{ (start_volume + (t / (1 + (1 - t))) * start_diff) | float(0) }}
                {% elif curve == 'bezier' %}
                  {{ (start_volume + (t * t * (3 - 2 * t)) * start_diff) | float(0) }}
                {% else %}
                  {{ (start_volume + t * start_diff) | float(0) }}
                {% endif %}
          # Pause to limit the update rate.
          # Apparently HA has issues with sub-second accuracy, so 100ms will have to do.
          - delay: '00:00:00.1'
    - service: media_player.volume_set
      data_template:
        entity_id: '{{ target_player }}'
        volume_level: '{{ target_volume }}'
